exec sp_executesql N'declare @Date datetime, @M00105 VARCHAR(20),@M00101 INT,@M00103 VARCHAR(20)   SELECT @M00105=RTRIM(LTRIM(@P1)), @M00101=@P2,@M00103=RTRIM(LTRIM(@P3)),@Date = getdate()    SELECT M006.M00602, M006.M00603,M001.M00801 AS M00801ID,M008.M00802, M008.M00803, M001.M00101 AS M00101ID,   M001.M00102, M001.M00103,M001.M00104,M001.M00106,M001.M00105,   M001.M00107,M001.M00112,   M004.M00413,M004.M00414,M004.M00407,b.Price as 促销单价, M004.M00410,   M004.M00408, M004.M00411, M004.M00403,  M004.M00404,    case M001.I00501 WHEN 3 THEN M004.M00407*(M004.M00409/100) ELSE (M004.M00407-M004.M00403) END  as 预计毛利,      CASE M001.I00501 WHEN 3 THEN (CASE WHEN (M004.M00407*(M004.M00409/100))<=0 THEN 0 ELSE (M004.M00407*(M004.M00409/100))/M004.M00407 END ) ELSE (case  when (M004.M00407-M004.M00403)=0 then 0 when (M004.M00407-M004.M00403)<0 then -(abs((M004.M00407-M004.M00403))/M004.M00407) else (M004.M00407-M004.M00403)/M004.M00407 end) END AS 预计毛利率,       isnull(c.QTY,0) QTY,isnull(c.C00208,0) C00208,case when isnull(c.QTY,0)>0 and M003.M00303>0 THEN c.QTY/M003.M00303 ELSE 0 END AS 可销天数,f.Y00409  as 在途数量,  M003.M00302,  M003.M00303,  b.BZ as 促销备注,b.BDAT as 促销开始日,b.EDAT as 促销结束日, M001.M00113, I025.I02503, I00603, I02203,M003.M00310,M003.M00322,M004.M00424,M004.M00425,M004.M00426,M004.M00427,e.Y01908 as 上次销售日, t.DeptNO,t.DeptName   FROM M001(nolock) INNER JOIN      M004(nolock) ON M001.M00101 = M004.M00101   LEFT OUTER JOIN      M005 ON M001.M00101 = M005.M00101 LEFT OUTER JOIN        M007 ON M005.M00701 = M007.M00701     LEFT OUTER JOIN      I025 ON M001.I02501 = I025.I02501 LEFT OUTER JOIN      M008 ON M001.M00801 = M008.M00801       LEFT OUTER JOIN dbo.F_GetSalesPrice(2,@Date) b  on M001.M00101 = b.M00101   left outer join dbo.F_GetC002s(2) c on M001.M00101=c.M00101       left outer join M003 on M001.M00101=M003.M00101 inner JOIN M006 ON M001.M00601 = M006.M00601   left outer join I006 on M001.I00601 = I006.I00601     left outer join I022 on M001.I02201 = I022.I02201   left outer join dbo.F_GetM001MaxSalDate(2) e on M001.m00101=e.M00101       left outer join dbo.F_OPLZTL(2) f on M001.M00101=f.M00101   left outer join Department t on M001.DeptID=t.DeptID where M00105 like ''%'' + @M00105 + ''%''     and (M001.M00101=@M00101 or @M00101=0)   and M00103 like @M00103 + ''%''   and M001.I02501 not in (5,7) AND m00402=1 order by M00105', N'@P1 char(20),@P2 char(50),@P3 char(20)', '                    ', '0                                                 ', '                    '


select * from DBO.F_GETC002S(2) /获取昨日库存
dbo.F_GetCurrentC002 实时库存

s013 //字段信息
M001 //商品信息 
MAX(CAST(TIMESTAMP AS BIGINT)) //判断是否有更新


declare @i bigint --设置一个变量,存储在一个地方
set @i=--每一次更新取出这个值
select * from m001 where convert(bigint,timestamp)>@i
select @i=max(convert(bigint,timestamp)) from m001 --然后将最大值记录到本地去，以备下次在使用

declare @Date datetime
select @Date = getdate()
select * from m001 
from m001(nolock) INNER JOIN M004(nolock) ON M001.M00101 = M004.M00101 
LEFT OUTER JOIN dbo.F_GetSalesPrice(2,@Date) b  on M001.M00101 = b.M00101 
left outer join dbo.F_GetC002s(2) c on M001.M00101=c.M00101 
inner JOIN M006 ON M001.M00601 = M006.M00601
LEFT OUTER JOIN M008 ON M001.M00801 = M008.M00801

declare @Date datetime
select @Date = getdate()
select 
M00102 as '货号' ,
M00103 as '商品条码',
M00602 as '分类ID',
M00105 as '商品名称',
M00107 as '规格',
M00407 as '零售价格',
price as '特价',
M00404 as '最新进价',
M00112 as '最小单位',
M00803 as '供应商',
QTY as '数量'
from m001(nolock) INNER JOIN M004(nolock) ON M001.M00101 = M004.M00101 
LEFT OUTER JOIN dbo.F_GetSalesPrice(2,@Date) b  on M001.M00101 = b.M00101 
left outer join dbo.F_GetC002s(2) c on M001.M00101=c.M00101 
inner JOIN M006 ON M001.M00601 = M006.M00601
LEFT OUTER JOIN M008 ON M001.M00801 = M008.M00801

//查询两个表之间不同
SELECT * FROM test.stmall_good as t1 where md5(CONCAT(t1.good_id,t1.barcode,t1.good_name,t1.good_spec,t1.good_price,ifnull(t1.good_tj_price,0),t1.good_pur_price,t1.units,t1.good_belong,ifnull(t1.good_num,0))) NOT IN (select md5(CONCAT(t2.good_id,t2.barcode,t2.good_name,t2.good_spec,t2.good_price,ifnull(t2.good_tj_price,0),t2.good_pur_price,t2.units,t2.good_belong,ifnull(t2.good_num,0))) from stmall.stmall_good as t2)

//更新修改部分
UPDATE stmall_good AS desc1 JOIN ( SELECT * FROM stmall.stmall_good AS t1 WHERE md5( CONCAT( t1.good_id, t1.barcode, t1.good_name, t1.good_spec, t1.good_price, ifnull(t1.good_tj_price, 0), t1.good_pur_price, t1.units, t1.good_belong, ifnull(t1.good_num, 0))) NOT IN ( SELECT md5( CONCAT( t2.good_id, t2.barcode, t2.good_name, t2.good_spec, t2.good_price, ifnull(t2.good_tj_price, 0), t2.good_pur_price, t2.units, t2.good_belong, ifnull(t2.good_num, 0))) FROM test.stmall_good AS t2 )) source1 ON desc1.good_id = source1.good_id SET desc1.barcode = source1.barcode, desc1.category_id = source1.category_id, desc1.good_name = source1.good_name, desc1.good_spec = source1.good_spec, desc1.good_price = source1.good_price, desc1.good_tj_price = source1.good_tj_price, desc1.good_pur_price = source1.good_pur_price, desc1.units = source1.units, desc1.good_belong = source1.good_belong, desc1.good_num = source1.good_num


SELECT
	* INTO outfile 'd:\\dd.txt'
FROM
	stmall.stmall_good as t1
WHERE
	t1.good_id NOT IN (
		SELECT
			good_id
		FROM
			test.stmall_good
	)

load data local infile "d:/dd.txt" replace into table stmall_good CHARACTER set utf8